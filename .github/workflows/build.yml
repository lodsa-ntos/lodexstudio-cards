name: Build Monorepo

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "**/*.md"
      - "**/*.png"
      - "**/*.jpg"
      - "**/*.gif"
      - ".github/ISSUE_TEMPLATE/**"
  pull_request:

# avoid long queues; cancel old runs on the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Install & Build (Node ${{ matrix.node }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node: [20]   # you can add 18 if you want to test it too

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install deps (root)
        run: npm ci

      # optional: if you have lint at the root, don't fail if it doesn't exist
      - name: Lint (optional)
        run: npm run lint --if-present

      - name: Build all packages (workspaces)
        run: npm run build:pkgs

      - name: Build demo (root)
        run: npm run build

      # save the demo dist for quick download on GitHub
      - name: Upload demo dist
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: demo-dist
          path: dist
          if-no-files-found: ignore

          # optional: if you have a specific folder structure, you can adjust the path
          # What this workflow does
          #  Installs dependencies in the root with npm ci (fast and reproducible).
          #  Compiles the monorepo packages with your script: npm run build:pkgs.
          #  Compiles the root demo with npm run build.
          #  Automatically caches ~/.npm to speed up executions.
          #  Ignores commits that only affect images/markdown/templates.
          #  Attaches the demo's dist/ as an artefact (useful for viewing the resulting build).